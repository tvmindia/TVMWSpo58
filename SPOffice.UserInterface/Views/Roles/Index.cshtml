@model UserInterface.Models.RolesViewModel
@using UserInterface.App_Start


@{
    ViewBag.Title = "Roles";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {

    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")

}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Settings</a></li>
        <li><a href=@Url.Content("~/SAMPanel")><i class="fa fa-users"></i> User management</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<div id="MainDiv" class="container SCtabContainer" style="height:680px">
    <div id="ButtonPatchDiv" class="col-md-12">
        <div class="" id="btnPatchManage" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Roles", data);
            }
        </div>

    </div>
    <div id="ManageRolesTableDiv" class="col-md-12">
        <table id="tblList" class="table table-striped table-bordered table-hover" cellspacing="0">
            <thead>
                <tr class="text-center">
                    <th>ID</th>
                    <th>Role Name</th>
                    <th>Application Name</th>
                    <th>Description</th>
                    <th>Created Date</th>
                    <th>...</th>
                </tr>
            </thead>
        </table>
    </div>

    <div id="ManageRolesEditDiv" hidden="hidden" class="col-md-12">
        @using (Ajax.BeginForm("InsertUpdateRoles", "Roles", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "RolesSaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "Rolesform" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="col-md-6">
                    <div class="form-group col-md-8">
                        <div class="col-md-12">
                            <label class="control-label">Select Application</label>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.AppID, Model.ApplicationList, "--Select Application--", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AppID, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1"></div>
                        </div>

                    </div>
                
                    <div class="form-group col-md-8">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control BlockEnter" } })
                                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-lg-2", id = "ID", Value = Guid.Empty })
                                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1"></div>
                        </div>

                    </div>
                  
                    <div class="form-group col-md-8">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RoleDescription, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.RoleDescription, new { htmlAttributes = new { @class = "form-control ", rows = 4 } })
                                @Html.ValidationMessageFor(model => model.RoleDescription, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-1 mandatory"></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1"></div>
                        </div>

                    </div>
                   
                </div>
                <div class="col-md-3 ">

                </div>
                <div class="form-group" hidden="hidden">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="btnInsertUpdate" type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
        <div>
        </div>
    </div>

    <div id="RolesDelete" hidden="hidden">
        @using (Ajax.BeginForm("DeleteRoles", "Roles", new AjaxOptions { HttpMethod = "POST", OnSuccess = "DeleteSuccess", Confirm = "Are you sure?", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            <div class="form-actions no-color">
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "control-label col-md-4", id = "deleteId" })
                <input id="btnDelete" type="submit" value="Delete" class="btn btn-default" />
            </div>
        }
    </div>


</div>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Roles")
   
}






