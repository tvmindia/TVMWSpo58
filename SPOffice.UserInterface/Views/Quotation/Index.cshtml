@model UserInterface.Models.QuoteHeaderViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Quotation";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {

    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatablecheckbox")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
<style>
    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 20px !important;
    }
</style>
}

<style>
    .invoice-box {
        max-width: 800px;
        margin: auto;
        padding: 30px;
        border: 1px solid #eee;
        box-shadow: 0 0 10px rgba(0, 0, 0, .15);
        font-size: 16px;
        line-height: 24px;
        font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
        color: #555;
    }

        .invoice-box table {
            width: 100%;
            line-height: inherit;
            text-align: left;
        }

            .invoice-box table td {
                padding: 5px;
                vertical-align: top;
            }

            .invoice-box table tr td:nth-child(2) {
                text-align: right;
            }

            .invoice-box table tr.top table td {
                padding-bottom: 20px;
            }

                .invoice-box table tr.top table td.title {
                    font-size: 45px;
                    line-height: 45px;
                    color: #333;
                }

            .invoice-box table tr.information table td {
                padding-bottom: 40px;
            }

            .invoice-box table tr.heading td {
                background: #eee;
                border-bottom: 1px solid #ddd;
                font-weight: bold;
            }

            .invoice-box table tr.details td {
                padding-bottom: 20px;
            }

            .invoice-box table tr.item td {
                border-bottom: 1px solid #eee;
            }

            .invoice-box table tr.item.last td {
                border-bottom: none;
            }

            .invoice-box table tr.total td:nth-child(2) {
                border-top: 2px solid #eee;
                font-weight: bold;
            }

            @@media only screen and (max-width: 600px) {
            .invoice-box table tr.top table td{
            width:100%;
            display:block;
            text-align:center;
            }
        
        .invoice-box table tr.information table td{
            width:100%;
            display:block;
            text-align:center;
        }
    }
</style>

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-truck"></i> Quotation</a></li>
       
    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">

    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Quotation", data);
            }
        </div>
    </div>
   
    <div class="row summaryboxes">
        <div class="col-md-2 col-sm-6 col-xs-12" style="cursor:pointer">

            @Html.Hidden("filter", "", htmlAttributes: new { @class = "", Value = ViewBag.filter })
            <div class="info-box" onclick="Gridfilter('DFT')">
                <span class="info-box-icon bg-yellow"><i class="ion ion"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">DRAFT <b><span id="draftCount">0</span></b></span>
                    <span id="draftCountDescription"></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
       
        <!-- /.col -->
        <!-- /.col -->
        <!-- fix for small devices only -->
        <div class="clearfix visible-sm-block"></div>

        <div class="col-md-2 col-sm-6 col-xs-12" style="cursor:pointer">
            <div class="info-box" onclick="Gridfilter('NGT')">
                <span class="info-box-icon bg-green"><i class="ion ion"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">NEGOTIATION <b><span id="negotiationCount">0</span></b></span>
                    <span id="negotiationCountDescription"></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <div class="col-md-2 col-sm-6 col-xs-12" style="cursor:pointer">
            <div class="info-box" onclick="Gridfilter('CVD')">
                <span class="info-box-icon bg-aqua"><i class="ion ion"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">CONVERTED <b><span id="convertedCount">0</span></b></span>
                    <span id="convertedCountDescription"></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
        <!-- /.col -->
        <!-- /.col -->
        <div class="col-md-2 col-sm-6 col-xs-12" style="cursor:pointer">
            <div class="info-box" onclick="Gridfilter('LST')">
                <span class="info-box-icon bg-green"><i class="ion ion"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">LOST <b><span id="lostCount">0</span></b></span>
                    <span id="lostCountDescription"></span>
                </div>
                <!-- /.info-box-content -->
            </div>
            <!-- /.info-box -->
        </div>
    </div>
    <div class="col-md-12">
        <div id="hdnfilterDescriptionDiv" hidden="hidden" style="position:absolute;padding-top:20px;font-size:medium">
            <b>Filter:</b>
            <p id="Draftfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-yellow"> Draft</p>
            <p id="Deliveredfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-aqua"> Delivered</p>
            <p id="Progressfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-green"> In Progress</p>
            <p id="Closedfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-aqua"> Closed</p>
            <p id="OnHoldfilter" style="padding-right:20px;font-size:medium" class="fa fa-th ig-yellow"> OnHold</p>
            
         </div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="QuotationTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Quote Date</th>
                        <th>Quote No.</th>
                        <th>Subject</th>
                        <th>To Company</th>
                        <th>Contact Details</th>
                        <th>From Company</th>
                        <th>Stage</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>


</section>
<section class="content">


    <div id="myNav" class="overlay">

        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblQuotationNo" class="SCHeader"></span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;z-index: 1;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "Quotation", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateQuotaion", "Quotation", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "QuoteForm" }))
                {
                    @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });
                    @Html.AntiForgeryToken()
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                                    @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })
                                    @Html.LabelFor(model => model.QuotationNo, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.QuotationNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "txtQuotationNo", @autofocus = true , @disabled = "disabled", @placeholder = "Autogenerated" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.QuotationDate, htmlAttributes: new { @class = "control-label" })
                                  
                                   

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.QuotationDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.QuotationDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ValidTillDate, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ValidTillDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.ValidTillDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CustomerID, Model.CustomerList, "-- Select Customer --", new { @class = "form-control HeaderBox", style = "padding:4px 12px;", @id = "ddlCustomer", onchange = "GetCustomerDeails(this);" })
                                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.SentToAddress, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.SentToAddress, new { htmlAttributes = new { @class = "form-control", @rows = "4"} })
                                        @Html.ValidationMessageFor(model => model.SentToAddress, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.SalesPersonID, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.SalesPersonID, Model.SalesPersonList, "-- Select Sales Person --", new { @class = "form-control", style = "padding:4px 12px;", @id = "ddlSalesPerson" })
                                        @Html.ValidationMessageFor(model => model.SalesPersonID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.QuoteFromCompCode, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                     
                                        @Html.DropDownListFor(model => model.QuoteFromCompCode, Model.CompanyList, "-- Select Company --", new { @class = "form-control", value = -1, style = "padding:4px 12px;", @id = "ddlCompany" })
                                        @Html.ValidationMessageFor(model => model.QuoteFromCompCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label " })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Stage, Model.QuoteStageList, new { @class = "form-control", value = -1, style = "padding:4px 12px;", @id = "ddlQuoteStage", @onchange ="ChangeQuoteStatus();" })
                                        @Html.ValidationMessageFor(model => model.Stage, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                        
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.QuoteSubject, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.QuoteSubject, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.QuoteSubject, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.QuoteBodyHead, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.QuoteBodyHead, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                        @Html.ValidationMessageFor(model => model.QuoteBodyHead, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1 mandatory"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>


                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Quote Stage</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblQuoteStage"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Email Sent(Y/N)</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblEmailSent"></div>
                                </div>
                            </div>
                          

                        </div>


                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>
                  
                    <div class="container-fluid">
                        <div class="col-md-12">
                            <div class="col-md-11">
                            </div>
                            <div class="col-md-1">
                                <a class="btn btn-openid" onclick="AddQuotationList()" id="btnAddItems" style="color:white;font-weight:bold"><i class="glyphicon"></i>Add</a>
                            </div>
                        </div>  
                        <div class="col-md-12">
                            <table id="ItemDetailsTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center TableHead">
                                        <th>ID</th>
                                        <th>ProductID</th>
                                        <th>Product Code</th>
                                        <th>Old Product Code</th>
                                        <th>Description</th>
                                        <th>Rate</th>
                                        <th>...</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    @*<div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Commercial Details</div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                        
                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GrossAmount, htmlAttributes: new { @class = "control-label" })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GrossAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.GrossAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })
                                   

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Discount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", onblur = "RoundTxtBox(this)", onkeyup = "AmountSummary()" } })
                                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.NetTaxableAmount, htmlAttributes: new { @class = "control-label" })

                                
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NetTaxableAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.NetTaxableAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxTypeCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                       
                                        @Html.DropDownListFor(model => model.TaxTypeCode, Model.TaxTypeList, "-- Select Tax Type --", new { @class = "form-control Roundoff", value = -1, style = "padding:4px 12px;",onchange="GetTaxPercentage();" })
                                        @Html.ValidationMessageFor(model => model.TaxTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxPercApplied, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                  
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxPercApplied, new { htmlattributes = new { @class = "form-control HeaderBox Roundoff ApplyPer", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxPercApplied, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                         
                           
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxAmount, htmlAttributes: new { @class = "control-label" })

                                   
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label" })

                                  
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                        </div>
                    </div>*@
                    @*<div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>*@
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                    <div class="col-md-12  ">
                        <div class="col-md-10">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.QuoteBodyFoot, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.QuoteBodyFoot, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                        @Html.ValidationMessageFor(model => model.QuoteBodyFoot, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GeneralNotes, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                        @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div>
                        @Html.Partial("Fileupload")
                    </div>

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
            }
            </div>
        </div>

    </div>
 
    <div class="modal fade" id="MailPreviewModel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document" style="min-width:900px !important;">
            <div class="modal-content" style="margin-top:4%;">
                <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                    <div class="container-fluid" style="padding-right: 0px;">
                        <div class="col-md-4">
                            <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>
                            <div class="col-md-12">
                                <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Mail Preview</span>
                            </div>
                        </div>
                        <div class="col-md-8" style="padding-right: 4px;">
                            <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                        </div>
                    </div>
                </div>
                
                <div class="modal-body" style="max-height:510px !important;overflow-y:scroll">
                    <div class="col-md-12">
                        @using (Ajax.BeginForm("SendQuoteMail", "Quotation", new AjaxOptions { HttpMethod = "POST", OnSuccess = "MailSuccess", OnFailure = "SaveFailure", OnBegin="ValidateEmail", AllowCache = false, LoadingElementId = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "sendmailform" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "", @id = "QuoteMAilHeaderID" })
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group col-md-12" hidden="hidden">
                                @Html.HiddenFor(model => model.MailBody, htmlAttributes: new { @class = "", Value = "" })
                            </div>
                            <div class="col-md-10">
                                <div class="form-group col-md-12">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SentToEmails, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.SentToEmails, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                            @Html.ValidationMessageFor(model => model.SentToEmails, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                        <div class="col-md-1"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" style="display:none;">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnFormSendMail" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-12" id="mailmodelcontent">
                    </div>
                </div>
                <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                    <a class="btn btn-primary"  onclick="SendMailClick()" id="btnMail"><i class="glyphicon glyphicon-floppy-disk"></i> Send Mail</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Edit Requisition Details Modal -->
    <div class="modal fade bs-example-modal-lg" id="AddQuotationItemModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document" style="min-width:900px !important;">
            <div class="modal-content" style="margin-top:4%;">
                <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                    <div class="container-fluid" style="padding-right: 0px;">
                        <div class="col-md-9">
                            <h3 class="modal-title SCHeader" id="modelContextLabel">Add Product</h3>
                        </div>
                        <div class="col-md-3" style="padding-right: 4px;">
                            <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                        </div>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="col-md-12">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.ProductSearch, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.quoteItemListObj.ProductSearch, Model.quoteItemListObj.quoteItemList, "-- Select--", new { @class = "form-control", value = -1, style = "width:100%;", @id = "ddlProductSearch", @onchange = "ProductSearchOnchange(this)" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div> 
                        </div>
                        <div class="col-md-12 headSeperator" style="width:100% !important;margin-left:0% !important"></div>

                        <div class="col-md-12">
                            <div class="col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.ProductCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.quoteItemListObj.ProductCode, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.OldProductCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.quoteItemListObj.OldProductCode, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.ProductName, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.quoteItemListObj.ProductName, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled" } })
                                    </div> 
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.ProductDescription, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.quoteItemListObj.ProductDescription, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                                    </div> 
                                </div>
                            </div>
                         
                            <div class="col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.quoteItemListObj.Rate, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.quoteItemListObj.Rate, new { htmlAttributes = new { @class = "form-control HeaderBox text-right", onkeypress = "return isNumber(event)" } })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="height: 50px;padding: 7px;">
                    <a class="btn btn-primary" onclick="AddQuotationItem()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>
                </div>
            </div>
        </div>
    </div>

    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>

<datalist id="Products" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>
<datalist id="UnitCodes" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Quotation")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/editableGrid")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
}