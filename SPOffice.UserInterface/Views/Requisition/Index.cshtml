@model SPOffice.UserInterface.Models.RequisitionViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Requisition";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {

    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
    <style>
        textarea:focus {
        height: 5em!important;
        }
    </style>
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-check-circle-o"></i> Requisition</a></li>
    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">
    <div class="row">
        <div class="" id="divbuttonPatchRequisitiontab" style="min-height:25px">
            @if (@ViewBag.viewOnly)
            {
                //button Patch not dispaying 
            }
            else
            {
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Requisition", data);
            }
        </div>
    </div>

    <div class="row summaryboxes" id="divSearchTiles" style="padding-top:15px">

    </div>

    <!-- /.col -->
    <!-- /.col -->
    <div class="row" style="border-top:4px solid #ffffff">
        <div class="col-md-12" style="margin-top:10px;padding-left:0px;">
            @Html.Hidden("filter", "", htmlAttributes: new { @class = "", Value = ViewBag.filter })
            <div class="col-md-3" style="padding-left:0px;">
                @Html.Label("From Date", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.TextBox("fromdate", "", new { @class = "form-control datepicker advance-filter", @id="txtFromDate" })


                </div>
            </div>
            <div class="col-md-3" style="padding-left:0px;">
                @Html.Label("To Date", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @Html.TextBox("todate", "", new { @class = "form-control datepicker advance-filter", @id="txtToDate" })
                </div>
            </div>
            <div class="col-md-3" style="padding-left:0px;">
                @Html.Label("Req status", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    @{
                        List<SelectListItem> RequisitionStatusfilter = new List<SelectListItem>();
                        RequisitionStatusfilter.Add(new SelectListItem
                        { Text = "--Select status--", Value = "", Selected = true });
                        RequisitionStatusfilter.Add(new SelectListItem
                        { Text = "Open", Value = "Open"});
                        RequisitionStatusfilter.Add(new SelectListItem
                        { Text = "Closed", Value = "Closed" });
                    }
                    @Html.DropDownListFor(model => model.ReqStatus, RequisitionStatusfilter, new { @class = "form-control advance-filter", @id="ddlReqStatus", style = "padding:4px 12px;" })


                </div>
            </div>
            <div class="col-md-3" style="padding-left:0px;padding-right:0px;">
               @Html.Label("Search", htmlAttributes: new { @class = "control-label" })
            <div class="col-md-12" style="padding-right:0px;">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Search" id="txtReqSearch">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit" onclick="FilterContent();" style="height:28px"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </div>
            </div>
        </div>
    </div>
    <div class="clearfix visible-sm-block"></div>
    <div class="col-md-12">
        <div id="FilterHeadSeperater" style="position:relative;padding-top:20px;font-size:medium;display:none;">          
            
            
        </div>

    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="tblRequisitionList" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Req No</th>
                        <th>Title</th>
                        <th>Req Date</th>
                        <th>Requested For Company</th>
                        <th>Req Status</th>
                        <th>Manager Approval</th>
                        <th>Final Approval</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>
    </section>
<section class="content" >


    <div id="myNav" class="overlay">

        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblReqNo" class="SCHeader"></span>
                </div>
                <div class="col-md-6" id="divbuttonPatchAddRequisition" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "Requisition", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateRequisition", "Requisition", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessRequisition", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "RequisitionForm" }))
                {
                    @Html.Hidden("BindValue", "", htmlAttributes: new { @class = "", Value = ViewBag.value });
                    @Html.AntiForgeryToken()
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                                    @Html.HiddenFor(model => model.ViewOnly, htmlAttributes: new { @class = "", Value = ViewBag.viewOnly })
                                     @*@Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })*@
                                    @Html.LabelFor(model => model.ReqNo, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ReqNo, new { htmlAttributes = new { @class = "form-control HeaderBox",@disabled="disabled",@placeholder="Autogenerated" } })
                                        @Html.ValidationMessageFor(model => model.ReqNo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })



                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReqDateFormatted, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ReqDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                                        @Html.ValidationMessageFor(model => model.ReqDateFormatted, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReqStatus, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">


                                       @{
                                           List<SelectListItem> RequisitionStatus = new List<SelectListItem>();
                                           RequisitionStatus.Add(new SelectListItem
                                           { Text = "Open", Value = "Open", Selected = true });
                                           RequisitionStatus.Add(new SelectListItem
                                           { Text = "Closed", Value = "Closed" });
                                    }
                                    @Html.DropDownListFor(model => model.ReqStatus, RequisitionStatus, new { @class = "form-control", style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.ReqStatus, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReqForCompany, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.hdnReqForCompany, htmlAttributes: new { @class = "", @value = "",@id="hdnReqForCompany" })
                                        @Html.DropDownListFor(model => model.ReqForCompany, Model.CompanyObj.CompanyList, "-- Select Company --", new { @class = "form-control", style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.ReqForCompany, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>
                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">
                            <div class="form-group col-md-12">
                                    <div class="col-md-12 text-right">
                                        <div class="rightAmtCaption">Requisition Status</div>
                                    </div>
                                    <div class="col-md-12 text-right">
                                        <div class="rightAmt" id="lblReqStatus">Open</div>
                                    </div>
                                </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Approval Status</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    @* glyphicon glyphicon-ok *@
                                    <div class="rightAmt" id="lblApprovalStatus">Pending</div>
                                </div>
                            </div>


                        </div>


                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>

                    <div class="container-fluid">
                        <div class="form-group col-md-12"></div>
                        <div class="col-md-12">
                            <div class="form-group col-md-2">
                                    @Html.HiddenFor(model => model.RequisitionDetailObj.RequisitionDetailObject, htmlAttributes: new { @class = "", @value = "" })
                                    @Html.DropDownListFor(model => model.RequisitionDetailObj.MaterialID, Model.RequisitionDetailObj.RawMaterialObj.RawMaterialList, "-- Select Item --", new { @class = "form-control", style = "padding:4px 12px;height:31px;", @onchange = "GetItemDetails()" })
                                    @Html.ValidationMessageFor(model => model.RequisitionDetailObj.MaterialID, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-md-2">
                                    @Html.EditorFor(model => model.RequisitionDetailObj.Description, new { htmlAttributes = new { @class = "form-control HeaderBox Ivalidate", @rows = 1, @placeholder = "Description",@readonly = "readonly" } })
                            </div>
                            <div class="form-group col-md-2">
                                    @Html.EditorFor(model => model.RequisitionDetailObj.ExtendedDescription, new { htmlAttributes = new { @class = "form-control HeaderBox Ivalidate", @rows = 1, @placeholder = "Extended Des" } })
                            </div>
                            <div class="form-group col-md-2">
                                    @Html.EditorFor(model => model.RequisitionDetailObj.CurrStock, new { htmlAttributes = new { @class = "form-control HeaderBox", onfocus = "SelectAllValue(this)", @placeholder = "Current Stock", @style = "height:31px;text-align: right", onkeypress = "return isNumber(event)" } })
                            </div>
                            <div class="form-group col-md-2">
                                    @Html.EditorFor(model => model.RequisitionDetailObj.RequestedQty, new { htmlAttributes = new { @class = "form-control HeaderBox Ivalidate", onfocus = "SelectAllValue(this)", @placeholder = "Requested Qty", @style = "height:31px;text-align: right", onkeypress = "return isNumber(event)" } })
                            </div>
                            <div class="form-group col-md-2">
                                    @Html.EditorFor(model => model.RequisitionDetailObj.AppxRate, new { htmlAttributes = new { @class = "form-control HeaderBox", onfocus = "SelectAllValue(this)", @placeholder = "Approx Rate",@style= "height:31px;text-align: right", onkeypress = "return isNumber(event)" } })
                            </div>
                            <div>
                                <a href="#" onclick="AddItemsToTable()" class="ItemAdd" title="Add item to list"><i class="glyphicon glyphicon-plus" style="font-size: 22px;position: relative;left: -6%;bottom:-5px;color:grey;"></i></a>
                                <a href="#" onclick="UpdateItemsToTable()" class="ItemEdit" title="Update changes into list" style="display:none;"><i class="glyphicon glyphicon-save ItemEdit" style="font-size: 22px;position: relative;left: -3%;bottom:-5px;color:grey;"></i></a>
                                <a href="#" id="anchorDeleteItem" class="ItemEdit" title="Delete item from list" style="display:none;"><i class="glyphicon glyphicon-trash ItemEdit" style="font-size: 22px;position: relative;left: -3%;bottom:-5px;color:grey;"></i></a>
                                <a href="#" onclick="ClearItemFields()" class="ItemEdit" title="Cancel and reset" style="display:none;"><i class="glyphicon glyphicon-remove ItemEdit" style="font-size: 22px;position: relative;left: -3%;bottom:-5px;color:grey;"></i></a>
                            </div>
                        </div>
                        <div class="form-group col-md-12"></div>
                        <div class="col-md-12" style="width:88%">
                            <table id="tblMaterialList" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" style="width:100%;">
                                <thead>
                                    <tr class="text-center TableHead">
                                        <th>ID</th>
                                        <th class="col-md-2">Material Code</th>
                                        <th class="col-md-2">Description</th>
                                        <th class="col-md-2">Extended Description</th>
                                        <th class="col-md-2">Current Stock</th>
                                        <th class="col-md-2">Requested Qty</th>
                                        <th class="col-md-2">Approximate Rate</th>
                                        <th>...</th>

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>

                    <!---File upload partial view -->

                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnReset" type="reset" />
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>







    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/Requisition")
    
}