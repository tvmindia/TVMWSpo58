@model SPOffice.UserInterface.Models.RequisitionViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {

    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-check-circle-o"></i> Requisition</a></li>
    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">
    <div class="row">
        <div class="" id="divbuttonPatchRequisitiontab" style="min-height:25px">
            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "Requisition", data);
            }
        </div>
    </div>


    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="tblRequisitionList" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>ReqNo</th>
                        <th>Title</th>
                        <th>ReqDate</th>
                        <th>Company</th>
                        <th>ReqStatus</th>
                        <th>Manager</th>
                        <th>Final</th>
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>
    </section>
<section class="content" >


    <div id="myNav" class="overlay">

        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblInvoiceNo" class="SCHeader"></span>
                </div>
                <div class="col-md-6" id="divbuttonPatchAddRequisition" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "Requisition", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateProformaInvoices", "ProformaInvoice", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "ProformaForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                                    @*@Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })*@
                                    @Html.LabelFor(model => model.ReqNo, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ReqNo, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.ReqNo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })



                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReqDateFormatted, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ReqDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                                        @Html.ValidationMessageFor(model => model.ReqDateFormatted, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReqForCompany, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">


                                        @Html.DropDownListFor(model => model.ReqForCompany, Model.CompanyObj.CompanyList, "-- Select Customer --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;" })
                                        @Html.ValidationMessageFor(model => model.ReqForCompany, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>


                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">
                            @*<div class="form-group col-md-12">
                                    <div class="col-md-12 text-right">
                                        <div class="rightAmtCaption">Quote Stage</div>
                                    </div>
                                    <div class="col-md-12 text-right">
                                        <div class="rightAmt" id="lblQuoteStage"></div>
                                    </div>
                                </div>*@
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Email Sent(Y/N)</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblEmailSent"></div>
                                </div>
                            </div>


                        </div>


                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>

                    <div class="container-fluid">
                        <div class="col-md-12">
                            <table id="tblMaterialList" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center TableHead">
                                        <th>ID</th>
                                        <th>SlNo.</th>
                                        <th>Product Code</th>
                                        <th>Description</th>
                                        <th>Unit</th>
                                        <th>Qty</th>
                                        <th>Rate</th>
                                        <th>Amount</th>
                                        <th>...</th>
                                        <th>ProductID</th>

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    @*@Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })*@

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Commercial Details</div>
                    <div class="col-md-12">
                        <div class="col-md-12">

                            <div class="form-group col-md-12"></div>
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GrossAmount, htmlAttributes: new { @class = "control-label" })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GrossAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.GrossAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>*@
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Discount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", onblur = "RoundTxtBox(this)", onkeyup = "AmountSummary()" } })
                                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.NetTaxableAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NetTaxableAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.NetTaxableAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxTypeCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">

                                        @Html.DropDownListFor(model => model.TaxTypeCode, Model.TaxTypeList, "-- Select Tax Type --", new { @class = "form-control BlockEnter Roundoff", value = -1, style = "padding:4px 12px;", onchange = "GetTaxPercentage();" })
                                        @Html.ValidationMessageFor(model => model.TaxTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxPercApplied, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">

                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxPercApplied, new { htmlattributes = new { @class = "form-control HeaderBox Roundoff ApplyPer", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxPercApplied, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@


                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                            <div class="form-group col-md-12"></div>
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                        </div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                    @*<div class="col-md-12  ">
                        <div class="col-md-10">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BodyFoot, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.BodyFoot, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BodyFoot, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>*@
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <!---File upload partial view -->

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>







    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    <script src="~/Scripts/UserJS/Requisition.js"></script>
}