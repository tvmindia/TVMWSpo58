@model SPOffice.UserInterface.Models.ProformaHeaderViewModel
@using UserInterface.App_Start
@{
    ViewBag.Title = "ProformaInvoice";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {

    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatablecheckbox")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
}

<style>
    .invoice-box {
        max-width: 800px;
        margin: auto;
        padding: 30px;
        border: 1px solid #eee;
        box-shadow: 0 0 10px rgba(0, 0, 0, .15);
        font-size: 16px;
        line-height: 24px;
        font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
        color: #555;
    }

        .invoice-box table {
            width: 100%;
            line-height: inherit;
            text-align: left;
        }

            .invoice-box table td {
                padding: 5px;
                vertical-align: top;
            }

            .invoice-box table tr td:nth-child(2) {
                text-align: right;
            }

            .invoice-box table tr.top table td {
                padding-bottom: 20px;
            }

                .invoice-box table tr.top table td.title {
                    font-size: 45px;
                    line-height: 45px;
                    color: #333;
                }

            .invoice-box table tr.information table td {
                padding-bottom: 40px;
            }

            .invoice-box table tr.heading td {
                background: #eee;
                border-bottom: 1px solid #ddd;
                font-weight: bold;
            }

            .invoice-box table tr.details td {
                padding-bottom: 20px;
            }

            .invoice-box table tr.item td {
                border-bottom: 1px solid #eee;
            }

            .invoice-box table tr.item.last td {
                border-bottom: none;
            }

            .invoice-box table tr.total td:nth-child(2) {
                border-top: 2px solid #eee;
                font-weight: bold;
            }

    @@media only screen and (max-width: 600px) {
        .invoice-box table tr.top table td {
            width: 100%;
            display: block;
            text-align: center;
        }

        .invoice-box table tr.information table td {
            width: 100%;
            display: block;
            text-align: center;
        }
    }
</style>

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-truck"></i> Proforma Invoice</a></li>

    </ol>
</div>
<!-- Main content -->
<section class="content" id="main">

    <div class="row">
        <div class="" id="btnPatchAttributeSettab" style="min-height:25px">

            @{
                var data = new { ActionType = "List" };
                @Html.Action("ChangeButtonStyle", "ProformaInvoice", data);
            }
        </div>
    </div>


    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12">
            <table id="ProformaInvoiceTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th style="display:none;">ID</th>
                        <th>Invoice Date</th>
                        <th>Invoice No</th>
                        <th>Customer Name</th>
                        <th>Subject</th>
                        <th>ValidTillDate</th>
                        <th>Total</th>
                        <th>Discount</th>
                        <th>Tax Amount</th>                       
                        <th>...</th>

                    </tr>
                </thead>
            </table>
        </div>
    </div>


</section>
<section class="content">


    <div id="myNav" class="overlay">

        <div class="overlay-content">

            <div class="row" id="OverlayHeader">
                <div class="col-md-6" style="text-align:left">
                    <span id="lblQuotationNo" class="SCHeader"></span>
                </div>
                <div class="col-md-6" id="btnPatchAdd" style="min-height:25px; padding-right:25px;">

                    @{
                        var data1 = new { ActionType = "Add" };
                        @Html.Action("ChangeButtonStyle", "ProformaInvoice", data1);
                    }
                </div>
            </div>

            <div class="EntryForms" style="height:550px">
                @using (Ajax.BeginForm("InsertUpdateProformaInvoice", "ProformaInvoice", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "ProformaForm" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Basic Details</div>
                    <div class="col-md-12">
                        <div class="col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                                    @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })
                                    @Html.LabelFor(model => model.InvoiceNo, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InvoiceNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "txtInvoiceNo", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.InvoiceNo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label" })



                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "txtInvoiceDate", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ValidTillDate, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ValidTillDate, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @autofocus = true } })
                                        @Html.ValidationMessageFor(model => model.ValidTillDate, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                         @*  <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.CustomerID, Model.CustomerList, "-- Select Customer --", new { @class = "form-control BlockEnter", style = "padding:4px 12px;", @id = "ddlCustomer", onchange = "GetCustomerDeails(this);" })
                                        @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.SentToAddress, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.SentToAddress, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.SentToAddress, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label " })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>

                            <div class="form-group col-md-12"></div>

                           

                          

                            <div class="form-group col-md-12"></div>
                            

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BodyHead, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.BodyHead, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BodyHead, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>


                        </div>
                        <div class="col-md-4" id="CommonFigure" style="padding-top:2%;border-left:1px solid #64e564;white-space:nowrap;">
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Quote Stage</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblQuoteStage"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="col-md-12 text-right">
                                    <div class="rightAmtCaption">Email Sent(Y/N)</div>
                                </div>
                                <div class="col-md-12 text-right">
                                    <div class="rightAmt" id="lblEmailSent"></div>
                                </div>
                            </div>


                        </div>


                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>

                    <div class="container-fluid">
                        <div class="col-md-12">
                            <table id="ItemDetailsTable" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center TableHead">
                                        <th>ID</th>
                                        <th>SlNo.</th>
                                        <th>Product Code</th>
                                        <th>Description</th>
                                        <th>Unit</th>
                                        <th>Qty</th>
                                        <th>Rate</th>
                                        <th>Amount</th>
                                        <th>...</th>
                                        <th>ProductID</th>

                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Commercial Details</div>
                    <div class="col-md-12">
                        <div class="col-md-12">

                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.GrossAmount, htmlAttributes: new { @class = "control-label" })

                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.GrossAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.GrossAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>
                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Discount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", onblur = "RoundTxtBox(this)", onkeyup = "AmountSummary()" } })
                                        @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.NetTaxableAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.NetTaxableAmount, new { htmlattributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.NetTaxableAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            @*<div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxTypeCode, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">

                                        @Html.DropDownListFor(model => model.TaxTypeCode, Model.TaxTypeList, "-- Select Tax Type --", new { @class = "form-control BlockEnter Roundoff", value = -1, style = "padding:4px 12px;", onchange = "GetTaxPercentage();" })
                                        @Html.ValidationMessageFor(model => model.TaxTypeCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>*@
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TaxPercApplied, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">

                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TaxPercApplied, new { htmlattributes = new { @class = "form-control HeaderBox Roundoff ApplyPer", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TaxPercApplied, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>


                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalTaxAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TotalTaxAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalTaxAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                            <div class="form-group col-md-12"></div>
                            <div class="form-group col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.TotalAmount, htmlAttributes: new { @class = "control-label" })


                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount", onkeypress = "return isNumber(event)", @readonly = "true" } })
                                        @Html.ValidationMessageFor(model => model.TotalAmount, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                    <div class="col-md-12  ">
                        <div class="col-md-10">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BodyFoot, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.BodyFoot, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.BodyFoot, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-1"></div>
                                    <div class="col-md-1"></div>
                                </div>

                            </div>
                         
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-1"></div>
                    </div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div>
                        @Html.Partial("Fileupload");
                    </div>

                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="col-md-12  ">&nbsp;</div>
                    <div class="form-group" hidden="hidden">
                        <div class="col-md-offset-2 col-md-10">
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>

    <div class="modal fade" id="MailPreviewModel" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document" style="min-width:900px !important;">
            <div class="modal-content" style="margin-top:4%;">
                <div class="modal-header" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 36px;padding: 3px;border-bottom:2px solid rgb(149, 76, 132)!important;">
                    <div class="container-fluid" style="padding-right: 0px;">
                        <div class="col-md-4">
                            <h3 class="modal-title SCHeader" id="modelContextLabel"></h3>
                            <div class="col-md-12">
                                <span style="font-weight: 600;font-size: 20px;" id="AddOrEditSpan">Mail Preview</span>


                            </div>
                        </div>
                        <div class="col-md-8" style="padding-right: 4px;">

                            <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                        </div>

                    </div>
                </div>


                <div class="modal-body" style="max-height:510px !important;overflow-y:scroll">
                    <div class="col-md-12">


                        @using (Ajax.BeginForm("SendQuoteMail", "ProformaInvoice", new AjaxOptions { HttpMethod = "POST", OnSuccess = "MailSuccess", OnFailure = "SaveFailure", OnBegin = "ValidateEmail", AllowCache = false, LoadingElementId = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", id = "sendmailform" }))

                        {
                            @Html.AntiForgeryToken()

                            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", Value = "", @id = "QuoteMAilHeaderID" })


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group col-md-12" hidden="hidden">
                                @Html.HiddenFor(model => model.MailBody, htmlAttributes: new { @class = "", Value = "" })

                            </div>
                            <div class="col-md-10">
                                <div class="form-group col-md-12">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SentToEmails, htmlAttributes: new { @class = "control-label" })
                                    </div>
                                    <div class="col-md-12">
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.SentToEmails, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                            @Html.ValidationMessageFor(model => model.SentToEmails, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="col-md-1"></div>
                                        <div class="col-md-1"></div>
                                    </div>

                                </div>
                            </div>
                            <div class="form-group" style="display:none;">
                                <div class="col-md-offset-2 col-md-10">
                                    <input id="btnFormSendMail" type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        }


                    </div>

                    <div class="col-md-12" id="mailmodelcontent">

                    </div>


                </div>

                <div class="modal-footer" style="background-image: url('content/images/73a6f1c8.png');background-repeat: repeat;height: 50px;padding: 7px;">
                    <a class="btn btn-primary" onclick="SendMailClick()" id="btnMail"><i class="glyphicon glyphicon-floppy-disk"></i> Send Mail</a>

                </div>
            </div>
        </div>
    </div>







    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>

    </div>
</section>




<datalist id="Products" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>
<datalist id="UnitCodes" onfocus='this.size=10;' onblur='this.size=1;'
          onchange='this.size=1; this.blur();'></datalist>


@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")

    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/ProformaInvoice")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/editableGrid")

}




